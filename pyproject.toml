[build-system]
requires = ["uv_build>=0.8.5,<0.9.0"]
build-backend = "uv_build"

[project]
name = "mcp-anywhere"
version = "0.8.0"
description = "Unified gateway for Model Context Protocol servers"
readme = "README.md"
requires-python = ">=3.11"
authors = [
    {name = "MCP Anywhere Team", email = "team@mcpeverywhere.com"}
]
dependencies = [
    # Core web framework dependencies
    "starlette[full]>=0.36.0",
    "uvicorn[standard]>=0.24.0",
    # Database dependencies
    "sqlalchemy[asyncio]>=2.0.0",
    "aiosqlite>=0.19.0",
    # Template engine
    "jinja2>=3.1.0",
    # Authentication
    "bcrypt>=4.0.0",
    "werkzeug>=3.0.0",
    "cryptography>=41.0.0",
    # MCP and AI dependencies
    "fastmcp>=2.9.0",
    "llm-sandbox>=0.2.0",
    "anthropic",
    "mcp>=1.1.2",
    # Utilities
    "httpx>=0.27.2",
    "python-dotenv>=1.0.0",
    "docker",
    "loguru>=0.7.0",
    # Additional dependencies
    "pydantic>=2.10.3",
    "PyJWT>=2.8.0",
    "tenacity>=8.2.0",
    "asyncpg>=0.30.0",
]

[dependency-groups]
dev = [
    "ruff>=0.12.7",
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.10.0",
    "respx>=0.20.0",
    "mypy>=1.5.0",
    "pytest-env>=1.1.5",
]

[project.scripts]
mcp-anywhere = "mcp_anywhere.__main__:run_cli"

[tool.ruff]
line-length = 100
src = ["src"]
output-format = "concise"

[tool.ruff.lint]
select = ["E", "F", "I", "B", "N", "D", "ANN", "TRY", "PD", "RUF200", "UP", "G"]
ignore = ["E501", "ANN003"]
logger-objects = ["loguru.logger"]

[tool.ruff.lint.extend-per-file-ignores]
"__init__.py" = ["F401", "F403", "E402"]
"tests/**/*.py" = ["D", "ANN"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.pytest.ini_options]
asyncio_mode = "auto"
env = [
    "DATABASE_URL=sqlite:////tmp/test_mcp_anywhere.db"
]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
check_untyped_defs = true
