# MCP Anywhere Configuration

# Session Management
# Set a strong secret key for session management (required for login sessions)
# IMPORTANT: Generate a secure random key in production!
SECRET_KEY=your-secret-key-here-change-in-production

# Session timeout in seconds (default: 28800 = 8 hours)
# OAuth sessions will expire after this duration
SESSION_MAX_AGE=28800

# JWT Configuration
# Set a strong secret key for JWT token signing and verification
# IMPORTANT: Generate a secure random key in production!
JWT_SECRET_KEY=your-jwt-secret-key-here-change-in-production

# Server Configuration
# Default host to bind to (0.0.0.0 for all interfaces, 127.0.0.1 for localhost only)
DEFAULT_HOST=0.0.0.0
# Default port to bind to (can be overridden with --port CLI flag)
DEFAULT_PORT=8000

# Legacy configuration (deprecated - use DEFAULT_PORT instead)
# WEB_PORT=8000

# MCP Server Configuration
MCP_PATH=/mcp
# Disable authentication for MCP HTTP endpoints (optional, defaults to false)
# MCP_DISABLE_AUTH=false

# Server URL (auto-configured based on DEFAULT_HOST and DEFAULT_PORT, but can override)
# Used for OAuth callbacks and external references
# SERVER_URL=http://localhost:8000

# Data Storage Configuration
# Directory for storing application data (database, keys, etc.)
# Can be absolute path or relative to project root
# Default: .data (hidden folder in project root)
DATA_DIR=.data

# Container Configuration
# Docker socket location (platform-specific)
# macOS: unix:///Users/$USER/.docker/run/docker.sock
# Linux: unix:///var/run/docker.sock
DOCKER_HOST=unix:///var/run/docker.sock

# Container images for different runtimes (optional)
# Python image for uvx servers - use slim images for better compatibility
MCP_PYTHON_IMAGE=python:3.11-slim

# Node.js image for npx servers - use slim images for better compatibility
MCP_NODE_IMAGE=node:20-slim

# Docker operation timeout in seconds (default: 300)
# Increase if you're getting timeout errors during server builds
DOCKER_TIMEOUT=300

# Preserve built containers between application restarts (default: true)
# Set to false if you prefer to rebuild containers on every shutdown
MCP_PRESERVE_CONTAINERS=true

# Default servers configuration file (optional)
# Specify a custom path to the JSON file containing default server configurations
DEFAULT_SERVERS_FILE=default_servers.json

# Logging Configuration
LOG_LEVEL=INFO
# LOG_FORMAT=
# LOG_FILE=
# LOG_JSON=false

# External API keys
# Claude API Configuration (for repository analyzer)
ANTHROPIC_API_KEY=your-anthropic-api-key-here
# LLM provider and model selection (optional)
# - LLM_PROVIDER: preferred global LLM provider (e.g. "anthropic", "openrouter", "openai")
# - LLM_MODEL: preferred model name (e.g. "anthropic/claude-sonnet-4", "openai/gpt-5")
LLM_PROVIDER=
LLM_MODEL=
# OpenRouter API key (sensitive) - can be stored via UI (encrypted) or provided via ENV
OPENROUTER_API_KEY=

# GitHub token (for repository analysis)
# GITHUB_TOKEN=your-github-token-here

# Claude settings
# Model to use for Claude (default: claude-sonnet-4-20250514)
ANTHROPIC_MODEL_NAME=claude-sonnet-4-20250514

# Database Configuration (optional, defaults to DATA_DIR/mcp_anywhere.db)
# DATABASE_URL=sqlite:///path/to/custom.db
